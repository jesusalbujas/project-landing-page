name: Publish Project

on:
  release:
    types:
    - created
    - edited

jobs:

  build-pages:
    name: Build dist ADempiere-Site
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: true
        fetch-depth: 0

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8.6.5

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: pnpm

    - name: Install Dependencies
      run: pnpm install --no-frozen-lockfile

    - name: Build Blog
      env:
        NODE_OPTIONS: --max_old_space_size=8192
      run: pnpm run docs:build

    - name: Upload dist files
      uses: actions/upload-artifact@v4
      with:
        name: adempiere-site
        path: src/.vuepress/dist

  publish-app-dist:
    name: Upload ADempiere-Site binaries
    if: ${{ github.event_name == 'release' && github.event.action == 'created' }}
    needs: build-pages
    runs-on: ubuntu-latest
    steps:
    - name: Download build dist app
      uses: actions/download-artifact@v4
      with:
        name: adempiere-site

    - name: Compress files for application dist
      uses: TheDoctor0/zip-release@0.6.2
      with:
        filename: 'Adempiere-Site.zip'
        path: './'

    - name: Create checksum sha256 file
      run: sha512sum Adempiere-Site.zip > Adempiere-Site.zip.sha512

    - name: Publish application binary in repository
      uses: skx/github-action-publish-binaries@master
      env:
        TOKEN_GITHUB: ${{ secrets.TOKEN_GITHUB }}
      with:
        args: 'Adempiere-Site.zip'

    - name: Publish checksum of file
      uses: skx/github-action-publish-binaries@master
      env:
        TOKEN_GITHUB: ${{ secrets.TOKEN_GITHUB }}
      with:
        args: 'Adempiere-Site.zip.sha512'

  check-docker-secrets:
    name: Check if docker hub registry information was set on secrets
    needs: build-pages
    runs-on: ubuntu-latest
    outputs:
      is_have_secrets: ${{ steps.check_secret_job.outputs.is_have_secrets }}
    steps:
    - id: check_secret_job
      run: |
        if [[ "${{ secrets.DOCKER_REPO_LANDING_PAGE }}" != "" && \
              "${{ secrets.DOCKER_USERNAME }}" != "" && \
              "${{ secrets.DOCKER_TOKEN }}" != "" ]]; \
        then
          echo "Secrets to use a container registry are configured in the repo"
          echo "is_have_secrets=true" >> $GITHUB_OUTPUT
        else
          echo "Secrets to use a container registry were not configured in the repo"
          echo "is_have_secrets=false" >> $GITHUB_OUTPUT
        fi

  push-alpine-image-dhr:
    name: Push docker alpine image to Docker Hub
    needs: check-docker-secrets
    if: needs.check-docker-secrets.outputs.is_have_secrets == 'true'
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repo
      uses: actions/checkout@v3

    - name: Download build dist app
      uses: actions/download-artifact@v4
      with:
        name: adempiere-site
        path: src/.vuepress/dist

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Build and push Docker Image Alpine
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./build-docker/production-alpine.Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKER_REPO_LANDING_PAGE }}:alpine
          ${{ secrets.DOCKER_REPO_LANDING_PAGE }}:alpine-${{ github.event.release.tag_name }}

  push-image-dhr:
    name: Push docker image to Docker Hub
    needs: check-docker-secrets
    if: needs.check-docker-secrets.outputs.is_have_secrets == 'true'
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repo
      uses: actions/checkout@v3

    - name: Download build dist app
      uses: actions/download-artifact@v4
      with:
        name: adempiere-site
        path: src/.vuepress/dist

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./build-docker/production.Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ${{ secrets.DOCKER_REPO_LANDING_PAGE }}:latest
          ${{ secrets.DOCKER_REPO_LANDING_PAGE }}:${{ github.event.release.tag_name }}
